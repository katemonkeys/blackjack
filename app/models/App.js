// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      _ref = App.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    App.prototype.initialize = function() {
      var deck;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      this.get('playerHand').on('endTurn', this.newTurn, this);
      return void 0;
    };

    App.prototype.newTurn = function() {
      var dh, ph;
      console.log('starting newTurn');
      dh = this.get('dealerHand');
      ph = this.get('playerHand');
      dh.models[0].set('revealed', true);
      console.log("player has " + ph.checkScores());
      if (ph.checkScores() > 21) {
        alert('you lose');
      } else {
        while (dh.checkScores() < 17) {
          dh.hit();
          console.log("dealer has " + dh.checkScores());
        }
        console.log("dealer has " + dh.checkScores());
        if (dh.checkScores() > 21) {
          alert('dealer busts (you win)');
        } else if (dh.checkScores() > ph.checkScores()) {
          alert('dealer wins');
        } else if (dh.checkScores() === ph.checkScores()) {
          alert('push');
        } else {
          alert('you win!');
        }
      }
      return void 0;
    };

    return App;

  })(Backbone.Model);

}).call(this);
